{"documents":[{"pageContent":"Bits and Bytes of Computer and Information Sciences\nStudents are introduced to the fields (and disciplines) of computer science and information science within a small classroom setting. They will learn to make a successful transition from high school to the university, while exploring study skills, student success plans and research opportunities.\nAverage GPA: 3.5051321928460344","metadata":{"course_id":"CMSC100","credits":"1","prerequisites":"","type":"cs","name":"Bits and Bytes of Computer and Information Sciences"}},{"pageContent":"Introduction to C Programming\nDesign and analysis of programs in C. An introduction to computing using structured programming concepts. Intended for students with no or minimal programming experience.\nAverage GPA: 2.386264656616416","metadata":{"course_id":"CMSC106","credits":"4","prerequisites":"","type":"cs","name":"Introduction to C Programming"}},{"pageContent":"Introduction to Computer Programming via the Web\nIntroduction to computer programming in the context of developing full featured dynamic web sites. Uses a problem solving approach to teach basics of program design and implementation using JavaScript; relates these skills to creation of dynamic web sites; then explores both the potential and limits of web-based information sources for use in research. Intended to help relate a student's major to these emerging technologies.\nAverage GPA: 2.5378168074699867","metadata":{"course_id":"CMSC122","credits":"3","prerequisites":"","type":"cs","name":"Introduction to Computer Programming via the Web"}},{"pageContent":"Introduction to Computing\nIntroduces you to the computing field as a whole. You will gain skills used across the spectrum of computing majors and learn about the great variety of routes into the various areas of study and employment in technological fields.\nAverage GPA: 3.216279069767442","metadata":{"course_id":"CMSC125","credits":"3","prerequisites":"","type":"cs","name":"Introduction to Computing"}},{"pageContent":"Object-Oriented Programming I\nIntroduction to programming and computer science. Emphasizes understanding and implementation of applications using object-oriented techniques. Develops skills such as program design and testing as well as implementation of programs using a graphical IDE. Programming done in Java.\nAverage GPA: 2.4692104435357036","metadata":{"course_id":"CMSC131","credits":"4","prerequisites":"Must complete MATH140 with a minimum grade of C-","type":"cs","name":"Object-Oriented Programming I"}},{"pageContent":"Object-Oriented Programming II\nIntroduction to use of computers to solve problems using software engineering principles. Design, build, test, and debug medium -size software systems and learn to use relevant tools. Use object-oriented methods to create effective and efficient problem solutions. Use and implement application programming interfaces (APIs). Programming done in Java.\nAverage GPA: 2.624468386730933","metadata":{"course_id":"CMSC132","credits":"4","prerequisites":"Must complete CMSC131 and MATH141 with a minimum grade of C-","type":"cs","name":"Object-Oriented Programming II"}},{"pageContent":"Object Oriented Programming I Beyond Fundamentals\nAn introduction to computer science and object-oriented programming for students with prior Java programming knowledge (conditionals, loops, methods). Program design, implementation, and testing using object-oriented techniques. All programming will be done in Java using a graphical IDE.\nAverage GPA: 3.4715447154471546","metadata":{"course_id":"CMSC133","credits":"2","prerequisites":"","type":"cs","name":"Object Oriented Programming I Beyond Fundamentals"}},{"pageContent":"Introduction to Computer Systems\nIntroduction to the interaction between user programs and the operating system/hardware. Major topics include C programming, introductory systems programming, and assembly language. Other concepts covered include UNIX, machine data representation, thread management, optimization, and virtual memory. Programming is done in the Linux Environment.\nAverage GPA: 2.517170187325627","metadata":{"course_id":"CMSC216","credits":"4","prerequisites":"Must complete CMSC132 with a minimum grade of C-","type":"cs","name":"Introduction to Computer Systems"}},{"pageContent":"Discrete Structures\nFundamental mathematical concepts related to computer science, including finite and infinite sets, relations, functions, and propositional logic. Introduction to other techniques, modeling and solving problems in computer science. Introduction to permutations, combinations, graphs, and trees with selected applications.\nAverage GPA: 2.6779751480276874","metadata":{"course_id":"CMSC250","credits":"4","prerequisites":"Must complete CMSC131 and MATH141 with a minimum grade of C-","type":"cs","name":"Discrete Structures"}},{"pageContent":"Special Topics in Computer Science\n\nAverage GPA: N/A","metadata":{"course_id":"CMSC298A","credits":"1","prerequisites":"","type":"cs","name":"Special Topics in Computer Science"}},{"pageContent":"Introduction to Data Science\nAn introduction to the data science pipeline, i.e., the end-to-end process of going from unstructured, messy data to knowledge and actionable insights. Provides a broad overview of several topics including statistical data analysis, basic data mining and machine learning algorithms, large-scale data management, cloud computing, and information visualization.\nAverage GPA: 3.4170012547051436","metadata":{"course_id":"CMSC320","credits":"3","prerequisites":"","type":"cs","name":"Introduction to Data Science"}},{"pageContent":"Organization of Programming Languages\nA study of programming languages, including their syntax, semantics, and implementation. Several different models of languages are discussed, including dynamic, scripting (e.g., Ruby, Python) functional (e.g., OCaml, Haskell, Scheme), and memory safe systems programming (e.g., Rust). Explores language features such as formal syntax, scoping and binding of variables, higher-order programming, typing, and type polymorphism. Introduces finite automata, context free grammar, parsing, lambda calculus, and basics of security attacks and software security.\nAverage GPA: 2.802368040491685","metadata":{"course_id":"CMSC330","credits":"3","prerequisites":"Must complete CMSC216 and CMSC250 with a minimum grade of C-","type":"cs","name":"Organization of Programming Languages"}},{"pageContent":"Web Application Development with JavaScript\nProvides an introduction to modern ways of developing Web Applications/Services using JavaScript for both front-end and back-end. The course covers topics on fundamental JavaScript language constructs, server-side JavaScript, back-end data persistence, and client-side JavaScript to build Web Applications that interact with Web services and back-end databases.\nAverage GPA: 3.6752333540759174","metadata":{"course_id":"CMSC335","credits":"3","prerequisites":"","type":"cs","name":"Web Application Development with JavaScript"}},{"pageContent":"Algorithms\nA systematic study of the complexity of some elementary algorithms related to sorting, graphs and trees, and combinatorics. Algorithms are analyzed using mathematical techniques to solve recurrences and summations.\nAverage GPA: 2.486750423237993","metadata":{"course_id":"CMSC351","credits":"3","prerequisites":"Must complete CMSC250 and MATH141 with a minimum grade of C-","type":"cs","name":"Algorithms"}},{"pageContent":"Computer Science Honors Seminar\nOverview of computer science research activities, techniques, and tools. Diverse research areas will be covered, including systems, networks, artificial intelligence, human-computer interaction, software engineering, graphics, vision, and theory.\nAverage GPA: 3.8211881188118815","metadata":{"course_id":"CMSC396H","credits":"1","prerequisites":"","type":"cs","name":"Computer Science Honors Seminar"}},{"pageContent":"Computer Systems Architecture\nInput/output processors and techniques. Intra-system communication, buses, caches. Addressing and memory hierarchies. Microprogramming, parallelism, and pipelining.\nAverage GPA: 2.8798516204607574","metadata":{"course_id":"CMSC411","credits":"3","prerequisites":"Must complete CMSC330 and CMSC351 with a minimum grade of C-","type":"cs","name":"Computer Systems Architecture"}},{"pageContent":"Operating Systems\nA hands-on introduction to operating systems, including topics in: multiprogramming, communication and synchronization, memory management, IO subsystems, and resource scheduling polices. The laboratory component consists of constructing a small kernel, including functions for device IO, multi-tasking, and memory management.\nAverage GPA: 2.4906631762652705","metadata":{"course_id":"CMSC412","credits":"4","prerequisites":"Must complete CMSC330 and CMSC351 with a minimum grade of C-","type":"cs","name":"Operating Systems"}},{"pageContent":"Computer and Network Security\nAn introduction to the topic of security in the context of computer systems and networks. Identify, analyze, and solve network-related security problems in computer systems. Fundamentals of number theory, authentication, and encryption technologies, as well as the practical problems that have to be solved in order to make those technologies workable in a networked environment, particularly in the wide-area Internet environment.\nAverage GPA: 2.8836707862214044","metadata":{"course_id":"CMSC414","credits":"3","prerequisites":"Must complete CMSC330 and CMSC351 with a minimum grade of C-","type":"cs","name":"Computer and Network Security"}},{"pageContent":"Introduction to Parallel Computing\nIntroduction to parallel computing. Topics include programming for shared memory and distributed memory parallel architectures, and fundamental issues in design, development, and performance analysis of parallel programs.\nAverage GPA: 2.9549019607843143","metadata":{"course_id":"CMSC416","credits":"3","prerequisites":"","type":"cs","name":"Introduction to Parallel Computing"}},{"pageContent":"Computer Networks\nComputer networks and architectures. The OSI model including discussion and examples of various network layers. A general introduction to existing network protocols. Communication protocol specification, analysis, and testing.\nAverage GPA: 2.3519290928050047","metadata":{"course_id":"CMSC417","credits":"3","prerequisites":"Must complete CMSC351 with a minimum grade of C-","type":"cs","name":"Computer Networks"}},{"pageContent":"Advanced Data Structures\nDescription, properties, and storage allocation functions of data structures including balanced binary trees, B-Trees, hash tables, skiplists, tries, KD-Trees and Quadtrees. Algorithms for manipulating structures. Applications from areas such as String Processing, Computer Graphics, Information Retrieval, Computer Networks, Computer Vision, and Operating Systems.\nAverage GPA: 3.0263691041468817","metadata":{"course_id":"CMSC420","credits":"3","prerequisites":"Must complete CMSC330 and CMSC351 with a minimum grade of C-","type":"cs","name":"Advanced Data Structures"}},{"pageContent":"Introduction to Artificial Intelligence\nIntroduces a range of ideas and methods in AI, varying semester to semester but chosen largely from: automated heuristic search, planning, games, knowledge representation, logical and statistical inference, learning, natural language processing, vision, robotics, cognitive modeling, and intelligent agents. Programming projects will help students obtain a hands-on feel for various topics.\nAverage GPA: 3.1262993762993765","metadata":{"course_id":"CMSC421","credits":"3","prerequisites":"Must complete CMSC330 and CMSC351 with a minimum grade of C-","type":"cs","name":"Introduction to Artificial Intelligence"}},{"pageContent":"Introduction to Machine Learning\nMachine Learning studies representations and algorithms that allow machines to improve their performance on a task from experience. This is a broad overview of existing methods for machine learning and an introduction to adaptive systems in general. Emphasis is given to practical aspects of machine learning and data mining.\nAverage GPA: 3.1633390119250424","metadata":{"course_id":"CMSC422","credits":"3","prerequisites":"Must complete CMSC330 and CMSC351 with a minimum grade of C-","type":"cs","name":"Introduction to Machine Learning"}},{"pageContent":"Bioinformatic Algorithms, Databases, and Tools\nAn introduction to the main algorithms, databases, and tools used in bioinformatics. Topics may include assembly and analysis of genome sequences, reconstructing evolutionary histories, predicting protein structure, and clustering of biological data. Use of scripting languages to perform analysis tasks on biological data. No prior knowledge of biology is assumed.\nAverage GPA: 2.9598973607038124","metadata":{"course_id":"CMSC423","credits":"3","prerequisites":"Must complete CMSC351 with a minimum grade of C-","type":"cs","name":"Bioinformatic Algorithms, Databases, and Tools"}},{"pageContent":"Database Design\nStudents are introduced to database systems and motivates the database approach as a mechanism for modeling the real world. An in-depth coverage of the relational model, logical database design, query languages, and other database concepts including query optimization, concurrency control; transaction management, and log based crash recovery. Distributed and Web database architectures are also discussed.\nAverage GPA: 2.7143824027072756","metadata":{"course_id":"CMSC424","credits":"3","prerequisites":"Must complete CMSC351 with a minimum grade of C-","type":"cs","name":"Database Design"}},{"pageContent":"Game Programming\nAn introduction to the principles and practice of computer game programming and design. This includes an introduction to game hardware and systems, the principles of game design, object and terrain modeling, game physics, artificial intelligence for games, networking for games, rendering and animation, and aural rendering. Course topics are reinforced through the design and implementation of a working computer game.\nAverage GPA: 3.2300602928509905","metadata":{"course_id":"CMSC425","credits":"3","prerequisites":"Must complete CMSC330 and CMSC351 with a minimum grade of C-","type":"cs","name":"Game Programming"}},{"pageContent":"Computer Vision\nAn introduction to basic concepts and techniques in computervision. This includes low-level operations such as image filtering and edge detection, 3D reconstruction of scenes using stereo and structure from motion, and object detection, recognition and classification.\nAverage GPA: 3.237830825116762","metadata":{"course_id":"CMSC426","credits":"3","prerequisites":"Must complete CMSC330 and CMSC351 with a minimum grade of C-","type":"cs","name":"Computer Vision"}},{"pageContent":"Introduction to Compilers\nTopics include lexical analysis, parsing, intermediate representations, program analysis, optimization, and code generation.\nAverage GPA: 3.0738933601609655","metadata":{"course_id":"CMSC430","credits":"3","prerequisites":"Must complete CMSC330 and CMSC351 with a minimum grade of C-","type":"cs","name":"Introduction to Compilers"}},{"pageContent":"Programming Language Technologies and Paradigms\nProgramming language technologies (e.g., object-oriented programming), their implementations and use in software design and implementation.\nAverage GPA: 2.8894824707846416","metadata":{"course_id":"CMSC433","credits":"3","prerequisites":"Must complete CMSC330 with a minimum grade of C-","type":"cs","name":"Programming Language Technologies and Paradigms"}},{"pageContent":"Introduction to Human-Computer Interaction\nAssess usability by quantitative and qualitative methods. Conduct task analyses, usability tests, expert reviews, and continuing assessments of working products by interviews, surveys, and logging. Apply design processes and guidelines to develop professional quality user interfaces. Build low-fidelity paper mockups, and a high-fidelity prototype using contemporary tools such as graphic editors and a graphical programming environment (eg: Visual Basic, Java).\nAverage GPA: 3.3491322314049587","metadata":{"course_id":"CMSC434","credits":"3","prerequisites":"Must complete CMSC330 and CMSC351 with a minimum grade of C-","type":"cs","name":"Introduction to Human-Computer Interaction"}},{"pageContent":"Software Engineering\nState-of-the-art techniques in software design and development. Laboratory experience in applying the techniques covered. Structured design, structured programming, top-down design and development, segmentation and modularization techniques, iterative enhancement, design and code inspection techniques, correctness, and chief-programmer teams. The development of a large software project.\nAverage GPA: 3.066524216524217","metadata":{"course_id":"CMSC435","credits":"3","prerequisites":"Must complete one of: CMSC412, CMSC417, CMSC420, CMSC430, or CMSC433 with a minimum grade of C-","type":"cs","name":"Software Engineering"}},{"pageContent":"Programming Handheld Systems\nFundamental principles and concepts that underlie the programming of handheld systems, such as mobile phones, personal digital assistants, and tablet computers. Particular emphasis will be placed on concepts such as limited display size, power, memory and CPU speed; and new input modalities, where handheld systems differ substantially from non-handheld systems, and thus require special programming tools and approaches. Students will apply these concepts and principles in the context of an existing handset programming platform.\nAverage GPA: 3.2231180996988957","metadata":{"course_id":"CMSC436","credits":"3","prerequisites":"Must complete CMSC330 and CMSC351 with a minimum grade of C-","type":"cs","name":"Programming Handheld Systems"}},{"pageContent":"Design and Analysis of Computer Algorithms\nFundamental techniques for designing efficient computer algorithms, proving their correctness, and analyzing their complexity. General topics include graph algorithms, basic algorithm design paradigms (such as greedy algorithms, divide-and-conquer, and dynamic programming), network flows, NP-completeness, and other selected topics in algorithms.\nAverage GPA: 2.7538047655649502","metadata":{"course_id":"CMSC451","credits":"3","prerequisites":"Must complete CMSC351 with a minimum grade of C-","type":"cs","name":"Design and Analysis of Computer Algorithms"}},{"pageContent":"Algorithms for Data Science\nFundamental methods for processing a high volume of data. Methods include stream processing, locally sensitive hashing, web search methods, page rank computation, network and link analysis, dynamic graph algorithms as well as methods to handle high dimensional data/dimensionality reduction.\nAverage GPA: 2.8734463276836157","metadata":{"course_id":"CMSC454","credits":"3","prerequisites":"Must complete CMSC330 and CMSC351 with a minimum grade of C-","type":"cs","name":"Algorithms for Data Science"}},{"pageContent":"Cryptography\nThe theory, application, and implementation of mathematical techniques used to secure modern communications. Topics include symmetric and public-key encryption, message integrity, hash functions, block-cipher design and analysis, number theory, and digital signatures.\nAverage GPA: 2.3666666666666667","metadata":{"course_id":"CMSC456","credits":"3","prerequisites":"Must complete: 1 course from (MATH240, MATH341, MATH461), 1 course from (MATH241, MATH340), 1 course from (CMSC106, CMSC131), and MATH246, all with a minimum grade of C-","type":"cs","name":"Cryptography"}},{"pageContent":"Computational Methods\nBasic computational methods for interpolation, least squares, approximation, numerical quadrature, numerical solution of polynomial and transcendental equations, systems of linear equations and initial value problems for ordinary differential equations. Emphasis on methods and their computational properties rather than their analytic aspects. Intended primarily for students in the physical and engineering sciences.\nAverage GPA: N/A","metadata":{"course_id":"CMSC460","credits":"3","prerequisites":"Must complete: 1 course from (MATH240, MATH341, MATH461), 1 course from (MATH241, MATH340), 1 course from (CMSC106, CMSC131), and MATH246, all with a minimum grade of C-","type":"cs","name":"Computational Methods"}},{"pageContent":"Introduction to Numerical Analysis I\nFloating point computations, direct methods for linear systems, interpolation, solution of nonlinear equations.\nAverage GPA: N/A","metadata":{"course_id":"CMSC466","credits":"3","prerequisites":"Must complete: 1 course from (MATH240, MATH241, MATH410) and 1 course from (CMSC106, CMSC131), all with a minimum grade of C-","type":"cs","name":"Introduction to Numerical Analysis I"}},{"pageContent":"Introduction to Natural Language Processing\nIntroduction to fundamental techniques for automatically processing and generating natural language with computers. Machine learning techniques, models, and algorithms that enable computers to deal with the ambiguity and implicit structure of natural language. Application of these techniques in a series of assignments designed to address a core application such as question answering or machine translation.\nAverage GPA: 3.2949238578680204","metadata":{"course_id":"CMSC470","credits":"3","prerequisites":"Must complete MATH240, CMSC320, CMSC330, and CMSC351 with a minimum grade of C-","type":"cs","name":"Introduction to Natural Language Processing"}},{"pageContent":"Introduction to Data Visualization\nDatasets are becoming increasingly large and complex, requiring intuitive ways to explore and interpret them quickly and efficiently. In this case, a picture is worth a thousand words: visualizations enable us to transform data into images that are easier to understand and reason about, compared to raw numbers and raw text. Visualizations are critical tools in externalizing and organizing our knowledge and insights, whether to explore collected datasets to improve our understanding of the physical world, to assess and debug analysis/experimental workflows, or to present new and interesting results to diverse audiences. In this course we will study techniques and algorithms for creating effective visualizations based on principles from graphic design, perceptual psychology, and cognitive science. Students will learn how to design and build interactive visualizations for the web, using the D3.js (Data-Driven Documents) framework.\nAverage GPA: 2.913821138211382","metadata":{"course_id":"CMSC471","credits":"3","prerequisites":"Must complete CMSC330 and CMSC351 with a minimum grade of C-","type":"cs","name":"Introduction to Data Visualization"}},{"pageContent":"Capstone in Machine Learning\nSemester-long project course in which each student will identify and carry out a project related to machine learning, with the goal of publishing a research paper or software tool.\nAverage GPA: 3.422368421052631","metadata":{"course_id":"CMSC473","credits":"3","prerequisites":"Must complete either CMSC421 or CMSC422 with a minimum grade of C-","type":"cs","name":"Capstone in Machine Learning"}},{"pageContent":"Introduction to Computational Game Theory\nGame theory deals with interactions among agents (either human or computerized) whose objectives and preferences may differ from the objectives and preferences of the other agents. It will also provide a comprehensive introduction to game theory, concentrating on its computational aspects.\nAverage GPA: 2.6927789934354482","metadata":{"course_id":"CMSC474","credits":"3","prerequisites":"Must complete CMSC330 and CMSC351 with a minimum grade of C-","type":"cs","name":"Introduction to Computational Game Theory"}},{"pageContent":"Combinatorics and Graph Theory\nGeneral enumeration methods, difference equations, generating functions. Elements of graph theory, matrix representations of graphs, applications of graph theory to transport networks, matching theory and graphical algorithms.\nAverage GPA: N/A","metadata":{"course_id":"CMSC475","credits":"3","prerequisites":"Must complete MATH240 and MATH241 with a minimum grade of C-","type":"cs","name":"Combinatorics and Graph Theory"}},{"pageContent":"Selected Topics in Computer Science\nAn individualized course designed to allow a student or students to pursue a selected topic not taught as a part of the regular course offerings under the supervision of a Computer Science faculty member. Credit according to work completed.\nAverage GPA: 3.5714285714285716","metadata":{"course_id":"CMSC498A","credits":"1","prerequisites":"","type":"cs","name":"Selected Topics in Computer Science"}},{"pageContent":"Selected Topics in Computer Science; Cloud Computing\nPrerequisites: Minimum grade of C- in CMSC330 and CMSC351. Explores several fundamental topics of cloud computing, including IaaS (e.g., Open Stack, Kubernetes), key big data platforms, and data center networking. The course combines group reading and discussion of influential publications in the field, lectures by the instructor, talksby invited speakers, and a large project. Students will be a part of an agile development team, with extensive experience with GitHub, agile tools, and various technologies. Each course project is solicited from open-source community and will be mentored by an industry leader and/or engineer, or a senior graduate student/postdoc.\nAverage GPA: 3.857142857142857","metadata":{"course_id":"CMSC498B","credits":"3","prerequisites":"Must complete CMSC330 and CMSC351 with a minimum grade of C-","type":"cs","name":"Selected Topics in Computer Science; Cloud Computing"}},{"pageContent":"Selected Topics in Computer Science\n\nAverage GPA: 3.0714285714285716","metadata":{"course_id":"CMSC498J","credits":"3","prerequisites":"No prerequisites","type":"cs","name":"Selected Topics in Computer Science"}},{"pageContent":"Selected Topics in Computer Science; Multimodal Deep Learning\n\nAverage GPA: N/A","metadata":{"course_id":"CMSC498K","credits":"3","prerequisites":"No prerequisites","type":"cs","name":"Selected Topics in Computer Science; Multimodal Deep Learning"}},{"pageContent":"Selected Topics in Computer Science; Differentiable Programming\n\nAverage GPA: 3.8476190476190473","metadata":{"course_id":"CMSC498Z","credits":"3","prerequisites":"No prerequisites","type":"cs","name":"Selected Topics in Computer Science; Differentiable Programming"}},{"pageContent":"Independent Undergraduate Research\nStudents are provided with an opportunity to participate in a computer science research project under the guidance of a faculty advisor. Format varies. Students and supervising faculty member will agree to a research plan which must be approved by the department. As part of each research plan, students should produce a final paper delineating their contribution to the field.\nAverage GPA: 3.924561403508772","metadata":{"course_id":"CMSC499A","credits":"1","prerequisites":"No prerequisites","type":"cs","name":"Independent Undergraduate Research"}},{"pageContent":"Foundations of Parallel Computing\nCovers the foundations of parallel computing. Topics include programming for shared memory and distributed memory parallel architectures, and fundamental issues in design, development and analysis of parallel programs.\nAverage GPA: N/A","metadata":{"course_id":"CMSC616","credits":"3","prerequisites":"","type":"cs","name":"Foundations of Parallel Computing"}},{"pageContent":"Program Analysis and Understanding\nTechniques for static analysis of source code and modern programming paradigms. Analysis techniques: data flow analysis, program dependence graphs, program slicing, abstract interpretation. The meaning of programs: denotational semantics, partial evaluation. Advanced treatment of abstraction mechanisms: polymorphic types, operation overloading, inheritance, object-oriented programming and ML-like programming languages.\nAverage GPA: 3.4504347826086956","metadata":{"course_id":"CMSC631","credits":"3","prerequisites":"","type":"cs","name":"Program Analysis and Understanding"}},{"pageContent":"Empirical Research Methods for Computer Science\nA graduate-level introductory course on empirical reseach methods for computer scientists. Experimental techniques for evaluating software systems and processes, human performance using interfaces, programming environments, and software engineering methods. Introduction to constructs and methods of measurements, qualitative and quantitative design, quasi-experimental and non-experimental design, baseline design, and statistical analysis.\nAverage GPA: 3.5846153846153843","metadata":{"course_id":"CMSC634","credits":"3","prerequisites":"","type":"cs","name":"Empirical Research Methods for Computer Science"}},{"pageContent":"Introduction to Quantum Information Processing\nAn introduction to the field of quantum information processing. Students will be prepared to pursue further study in quantum computing, quantum information theory, and related areas.\nAverage GPA: 3.284063745019921","metadata":{"course_id":"CMSC657","credits":"3","prerequisites":"","type":"cs","name":"Introduction to Quantum Information Processing"}},{"pageContent":"Scientific Computing I\nFundamental techniques in scientific computation with an introduction to theory and software for each topic. Computer numbers and sources of errors, numerical linear algebra, optimization, and Monte Carlo methods.\nAverage GPA: N/A","metadata":{"course_id":"CMSC660","credits":"3","prerequisites":"","type":"cs","name":"Scientific Computing I"}},{"pageContent":"Capstone in Machine Learning\nSemester-long project course in which each student will identify and carry out a project related to machine learning, with the goal of publishing a research paper or software tool.\nAverage GPA: N/A","metadata":{"course_id":"CMSC673","credits":"3","prerequisites":"","type":"cs","name":"Capstone in Machine Learning"}},{"pageContent":"Algorithmic Evolutionary Biology\nCovers fundamental computational problems from comparative genomics and evolutionary biology. Topics include multiple sequence alignment and the reconstruction of evolutionary histories (e.g., phylogenetic trees and networks). These tasks are typically framed as NP-hard optimization problems, motivating the development of heuristics based on constraints, graph algorithms, and more recently machine learning. We analyze algorithms from the empirical and theoretical perspectives (e.g., computational complexity, optimality guarantees, and statistical consistency under popular models of evolution). Lastly, we discuss how algorithms are leveraged in emerging applications, like evolutionary analyses of tumors and pathogens, along with their limitations and directions for future research.\nAverage GPA: 3.641228070175439","metadata":{"course_id":"CMSC702","credits":"3","prerequisites":"","type":"cs","name":"Algorithmic Evolutionary Biology"}},{"pageContent":"Artificial Intelligence Planning\nAutomated planning of actions to accomplish some desired goals. Basic algorithms, important systems, and new directions in the field of artificial intelligence planning systems.\nAverage GPA: 3.3291479820627803","metadata":{"course_id":"CMSC722","credits":"3","prerequisites":"","type":"cs","name":"Artificial Intelligence Planning"}},{"pageContent":"Natural Language Processing\nIntroduce fundamental concepts, techniques, and algorithms for the computational handling of natural language. Statistical and machine learning techniques, models, and algorithms that enable computers to deal with the ambiguity and implicit structure of human language. Approaches that focus on uncovering linguistic structure, such as syntactic or semantic parsing, as well as those that focus on manipulating text in useful ways, such as question answering or machine translation.\nAverage GPA: 3.6218487394957983","metadata":{"course_id":"CMSC723","credits":"3","prerequisites":"","type":"cs","name":"Natural Language Processing"}},{"pageContent":"Advanced Computer Graphics\nAn introduction to advanced concepts in computer graphics. Includes an introduction to realistic rendering based on physical properties of light transport, radiometric concepts, and the rendering equation; Monte Carlo integration techniques to solve the rendering equation such as path tracing and multiple importance sampling; and neural network techniques for efficient sampling and denoising. Further discusses recent advances in 3D modeling and reconstruction, such as neural network-based 3D reconstruction; inverse rendering using neural radiance fields and differentiable rendering; and generative modeling for images, videos, and 3D data.\nAverage GPA: 3.5694656488549614","metadata":{"course_id":"CMSC740","credits":"3","prerequisites":"","type":"cs","name":"Advanced Computer Graphics"}},{"pageContent":"Master's Non-Thesis Research\n\nAverage GPA: 3.9048387096774193","metadata":{"course_id":"CMSC798","credits":"1","prerequisites":"","type":"cs","name":"Master's Non-Thesis Research"}},{"pageContent":"Master's Thesis Research\n\nAverage GPA: N/A","metadata":{"course_id":"CMSC799","credits":"1","prerequisites":"","type":"cs","name":"Master's Thesis Research"}},{"pageContent":"Department Internal Research Seminar\nResearch overviews from faculty to help introduce departmental research to graduate students.\nAverage GPA: N/A","metadata":{"course_id":"CMSC801","credits":"1","prerequisites":"","type":"cs","name":"Department Internal Research Seminar"}},{"pageContent":"Advanced Topics in Computer Systems; Large Language Models, Security, and Privacy\n\nAverage GPA: 3.040625","metadata":{"course_id":"CMSC818I","credits":"3","prerequisites":"","type":"cs","name":"Advanced Topics in Computer Systems; Large Language Models, Security, and Privacy"}},{"pageContent":"Advanced Topics in Computer Systems; Domain Specific Architecture\nCross-listed with ENEE759c.\nAverage GPA: 3.6204081632653065","metadata":{"course_id":"CMSC818J","credits":"3","prerequisites":"","type":"cs","name":"Advanced Topics in Computer Systems; Domain Specific Architecture"}},{"pageContent":"Advanced Topics in Computer Systems; Applied Cryptographic Systems and Privacy Enhancing Technologies.\n\nAverage GPA: N/A","metadata":{"course_id":"CMSC818T","credits":"3","prerequisites":"","type":"cs","name":"Advanced Topics in Computer Systems; Applied Cryptographic Systems and Privacy Enhancing Technologies."}},{"pageContent":"Advanced Topics in Computer Systems; Machine Learning for Physical Sensing and Perception\nPrerequisites: Enrollment in a Master's or Doctoral program, or permission of the instructor. Description: This course delves into advanced machine learning techniques for physical sensing and real-world perception. Topics include multimodal 3D volumetric rendering with physics-informed priors, ultra-low-power navigation with metamaterial sensing, urban localization via wireless signal patterns, sparse sensing for underwater imaging, and integrating spatial knowledge into language models for perception-aware AI.\nAverage GPA: N/A","metadata":{"course_id":"CMSC818V","credits":"3","prerequisites":"","type":"cs","name":"Advanced Topics in Computer Systems; Machine Learning for Physical Sensing and Perception"}},{"pageContent":"Advanced Topics in Information Processing; Common-sense Reasoning and Natural Language Understanding\n\nAverage GPA: 3.581679389312977","metadata":{"course_id":"CMSC828J","credits":"3","prerequisites":"","type":"cs","name":"Advanced Topics in Information Processing; Common-sense Reasoning and Natural Language Understanding"}},{"pageContent":"Advanced Topics in Information Processing; Numerical Methods for Data Science and Machine Learning\n\nAverage GPA: 3.892","metadata":{"course_id":"CMSC828V","credits":"1","prerequisites":"","type":"cs","name":"Advanced Topics in Information Processing; Numerical Methods for Data Science and Machine Learning"}},{"pageContent":"Advanced Topics in Programming Languages; Differentiable Programming\n\nAverage GPA: 3.8117647058823527","metadata":{"course_id":"CMSC838B","credits":"3","prerequisites":"","type":"cs","name":"Advanced Topics in Programming Languages; Differentiable Programming"}},{"pageContent":"Advanced Topics in Programming Languages; Programming Languages and Computer Architecture\n\nAverage GPA: 3.692592592592592","metadata":{"course_id":"CMSC838L","credits":"3","prerequisites":"","type":"cs","name":"Advanced Topics in Programming Languages; Programming Languages and Computer Architecture"}},{"pageContent":"Advanced Topics in Human-Computer Interaction; Embodied Media Design\nExplores the potential of human augmentation technologies, such as wearable computing, haptics, virtual reality, and more, to enhance human physical, perceptual, and cognitive capabilities. To achieve this, students will read relevant literature from the fields of Psychology, Cognitive Science, and Human-Computer Interaction. Additionally, students will create low-fidelity paper mockups and a prototype based on digital/analog circuit design, mechanical design, and a programming environment.\nAverage GPA: 3.6809523809523808","metadata":{"course_id":"CMSC839A","credits":"3","prerequisites":"","type":"cs","name":"Advanced Topics in Human-Computer Interaction; Embodied Media Design"}},{"pageContent":"Advanced Topics in Human-Computer Interaction; Governing Algorithms & Algorithmic Governance\nCross-listed with INST878D.  This cross-cutting interdisciplinary course, taught jointly between the College of Information Studies and the Department of Computer Science, investigates the role that algorithms and automated decision-making systems play in markets, societies, and policymaking. The course connects policy and computational conceptualizations of transparency, security, fairness, privacy, manipulation, and accountability through a series of casestudies and burning debates. Students will collaborate cross-disciplinary and be encouraged to work through difficult trade-offs to reach consensus. By discussing recent applications of algorithms for social and consumer sorting, and the moderation and generation of content, students will engage with the pressing challenges and opportunities in the governance of and by algorithms.\nAverage GPA: N/A","metadata":{"course_id":"CMSC839C","credits":"3","prerequisites":"","type":"cs","name":"Advanced Topics in Human-Computer Interaction; Governing Algorithms & Algorithmic Governance"}},{"pageContent":"Advanced Topics in Human-Computer Interaction; Uncertainty Communication for Decision-Making\nHuman-Computer Interaction (HCI) research topics focusing on model uncertainty and decision-making. We will cover a range of models, from linear regression to probabilistic forecasts and AI foundation models, and explore how to help human users understand and manage uncertainty in these computational models. Core topics include statistical communication, explainability, decision-making, uncertainty visualization, and LLM/LMM uncertainty. The course format includes a combination of readings, presentations, discussions, and lectures.\nAverage GPA: N/A","metadata":{"course_id":"CMSC839E","credits":"3","prerequisites":"","type":"cs","name":"Advanced Topics in Human-Computer Interaction; Uncertainty Communication for Decision-Making"}},{"pageContent":"Selected Topics in Information Processing; Computational Imaging\nCross-listed with ENEE739Z.  Introduces various computational imaging systems and the algorithms that underlie their operation. Particular emphasis will be placed on recently developed learning based reconstruction algorithms. This is a mixed lecture/seminar course.\nAverage GPA: 3.637096774193549","metadata":{"course_id":"CMSC848B","credits":"3","prerequisites":"","type":"cs","name":"Selected Topics in Information Processing; Computational Imaging"}},{"pageContent":"Selected Topics in Information Processing; Trustworthy Machine Learning\n\nAverage GPA: 3.789473684210526","metadata":{"course_id":"CMSC848I","credits":"3","prerequisites":"","type":"cs","name":"Selected Topics in Information Processing; Trustworthy Machine Learning"}},{"pageContent":"Selected Topics in Information Processing; Multimodal Foundation Models\nDiscusses recent foundation models proposed in the literature, with a focus on vision-language models. Topics include large language models, vision-language models, and vision-audio models.\nAverage GPA: N/A","metadata":{"course_id":"CMSC848K","credits":"3","prerequisites":"","type":"cs","name":"Selected Topics in Information Processing; Multimodal Foundation Models"}},{"pageContent":"Selected Topics in Information Processing; Theory of Robust Machine Learning\n\nAverage GPA: N/A","metadata":{"course_id":"CMSC848P","credits":"3","prerequisites":"","type":"cs","name":"Selected Topics in Information Processing; Theory of Robust Machine Learning"}},{"pageContent":"Advanced Topics in Theory of Computing\n\nAverage GPA: 3.111111111111111","metadata":{"course_id":"CMSC858J","credits":"3","prerequisites":"","type":"cs","name":"Advanced Topics in Theory of Computing"}},{"pageContent":"Advanced Topics in Theory of Computing\n\nAverage GPA: N/A","metadata":{"course_id":"CMSC858U","credits":"3","prerequisites":"","type":"cs","name":"Advanced Topics in Theory of Computing"}},{"pageContent":"Pre-Candidacy Research\n\nAverage GPA: 3.904833836858006","metadata":{"course_id":"CMSC898","credits":"1","prerequisites":"","type":"cs","name":"Pre-Candidacy Research"}},{"pageContent":"Doctoral Dissertation Research\n\nAverage GPA: 3.3793103448275863","metadata":{"course_id":"CMSC899","credits":"6","prerequisites":"","type":"cs","name":"Doctoral Dissertation Research"}}]}